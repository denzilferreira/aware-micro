plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.5.31'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.awareframework'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
}

configurations {
  compileClasspath.resolutionStrategy.activateDependencyLocking()
  runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

ext {
  kotlinVersion = '1.5.31'
  vertxVersion = '4.3.3'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
  applicationDefaultJvmArgs = ['-DlogLevel=INFO']
}


def mainVerticleName = 'com.awareframework.micro.MainVerticle'
def watchForChange = 'src/main/kotlin/**/*'
def doOnChange = './gradlew classes'

dependencies {
  implementation "commons-lang:commons-lang:2.6"  // Required for StringEscapeUtils
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-health-check:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-web-client:$vertxVersion"
  implementation "io.vertx:vertx-mysql-client:$vertxVersion"
  implementation "io.vertx:vertx-pg-client:$vertxVersion"
  implementation "io.vertx:vertx-hazelcast:$vertxVersion"
  implementation "io.vertx:vertx-auth-oauth2:$vertxVersion"
  implementation "io.vertx:vertx-tcp-eventbus-bridge:$vertxVersion"
  implementation "io.vertx:vertx-sockjs-service-proxy:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
  implementation "io.vertx:vertx-mqtt:$vertxVersion"
  implementation "io.vertx:vertx-web-templ-pebble:$vertxVersion"
  implementation "org.slf4j:slf4j-api:1.7.36"
  implementation "ch.qos.logback:logback-classic:1.2.11"
  implementation "ch.qos.logback:logback-core:1.2.11"
  implementation "io.vertx:vertx-core:$vertxVersion"

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
}

compileKotlin {
  kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '11'
}

jar {
  metaInf {
    from rootProject.file("LICENSE")
  }
}

shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
  metaInf {
    from rootProject.file("LICENSE")
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED', 'standardOut', 'standardError'
    exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
    showCauses = true
    showExceptions = true
    showStackTraces = true
    showStandardStreams = true
    outputs.upToDateWhen { false }
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
